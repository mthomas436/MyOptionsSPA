// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyOptions.API.Data;

namespace MyOptions.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181111214819_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyOptions.API.Models.Option", b =>
                {
                    b.Property<int>("Optionid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Commission");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DateEntered")
                        .HasColumnType("Date");

                    b.Property<double>("EntryPrice");

                    b.Property<double?>("ExitPrice");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("Date");

                    b.Property<string>("Notes");

                    b.Property<int>("OptionTypeId");

                    b.Property<int>("Quantity");

                    b.Property<double>("StockPriceatPurchace");

                    b.Property<double>("StrikePrice");

                    b.Property<int>("Tradeid");

                    b.HasKey("Optionid");

                    b.HasIndex("OptionTypeId");

                    b.HasIndex("Tradeid");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("MyOptions.API.Models.OptionType", b =>
                {
                    b.Property<int>("OptionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("OptionTypeId");

                    b.ToTable("OptionTypes");
                });

            modelBuilder.Entity("MyOptions.API.Models.Trade", b =>
                {
                    b.Property<int>("Tradeid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateClosed");

                    b.Property<DateTime>("DateEntered");

                    b.Property<string>("Description");

                    b.Property<string>("Notes");

                    b.Property<string>("StockSymbol")
                        .IsRequired();

                    b.Property<int>("TradeTypeId");

                    b.Property<int>("Userid");

                    b.HasKey("Tradeid");

                    b.HasIndex("TradeTypeId");

                    b.HasIndex("Userid");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("MyOptions.API.Models.TradeType", b =>
                {
                    b.Property<int>("TradeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("TradeTypeId");

                    b.ToTable("TradeTypes");
                });

            modelBuilder.Entity("MyOptions.API.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("Lastname");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PhotoUrl");

                    b.Property<string>("Username");

                    b.HasKey("Userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyOptions.API.Models.Option", b =>
                {
                    b.HasOne("MyOptions.API.Models.OptionType", "OptionType")
                        .WithMany("Options")
                        .HasForeignKey("OptionTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyOptions.API.Models.Trade", "Trades")
                        .WithMany("Options")
                        .HasForeignKey("Tradeid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyOptions.API.Models.Trade", b =>
                {
                    b.HasOne("MyOptions.API.Models.TradeType", "TradeTypes")
                        .WithMany("Trades")
                        .HasForeignKey("TradeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyOptions.API.Models.User")
                        .WithMany("Trades")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
